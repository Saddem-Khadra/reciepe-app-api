name: Djando tests and lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
# on:
#   schedule:
#     - cron:  '*/15 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: supersecretpassword
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Run migrations
        working-directory: ./app
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: python manage.py migrate
      - name: Lint with flake8
        run: |
          flake8
      - name: Coverage report
        working-directory: ./app
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: |
          sudo mkdir -p /vol/web/media/uploads/recipe/*  && sudo mkdir -p /vol/web/static && coverage run manage.py test && coverage report --fail-under=75 && coverage xml
      - name: Report coverage to codecov
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}

        uses: codecov/codecov-action@v1.0.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          directory: ./coverage/reports/
          fail_ci_if_error: true